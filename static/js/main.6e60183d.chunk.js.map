{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","todosList","userId","usersFromServer","filter","App","useState","setTodos","setTitle","titleError","setTitleError","setUserId","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e60183d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/ToDo';\n\ntype Props = {\n  todo: Todo;\n};\n// Add the required props\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\n  <article\n    className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/ToDo';\n\nfunction getUserById(userId:number) {\n  return usersFromServer.filter(user => user.id === userId);\n}\n\nexport const todosList:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId)[0],\n}));\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosList);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (title && userId) {\n      const newTodo:Todo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: usersFromServer\n          .filter((user) => user.id === userId)[0],\n      };\n\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n\n      setTitle('');\n      setTitleError(false);\n      setUserId(0);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}